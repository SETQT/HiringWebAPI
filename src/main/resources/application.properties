

#spring.datasource.url=jdbc:postgresql://john.db.elephantsql.com:5432/bcslnnov
spring.datasource.url=jdbc:postgresql://localhost:5432/DataHiringWeb
spring.datasource.username=postgres
#spring.datasource.username=bcslnnov
spring.datasource.password=root
#spring.datasource.password=ZSYlCcUbdDwLwNa3E-j_nUBhUc9bkWTf

#spring.jpa.show-sql=true


# online postgres
#spring.datasource.url=jdbc:postgresql://john.db.elephantsql.com:5432/bcslnnov
#spring.datasource.username=bcslnnov
#spring.datasource.password=ZSYlCcUbdDwLwNa3E-j_nUBhUc9bkWTf

# local Postgres


spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation= true
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = update

#allow table's name like tblProduct

#spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

#spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jpa.properties.hibernate.format_sql=true


#firebase
firebase.bucket-name= jobhiringweb.appspot.com
firebase.image-url= https://storage.googleapis.com/${firebase.bucket-name}/%s
spring.main.allow-circular-references=true

